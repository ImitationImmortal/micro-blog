input listArticleRequest{
    keyword: String!
    lastId: String!
    pagination: Pagination
}

"""
Defines data required to fetch paginated data
"""
input Pagination {
    """
    Page number for which data will be fetched
    """
    page: Int!
    """
    Number of data to be fetched
    """
    limit: Int!
}

type listArticleResponse {
    code: Int!
    msg: String!
    data: listArticleResponse_Data
}

type listArticleResponse_Data {
    total: Int!
    articles: [article]
}

type article {
    id: String!
    title: String
    content: String
    image: String
    createdAt: String
    author: listArticleResponse_Data_Author
}

type listArticleResponse_Data_Author {
    id: String
    username: String
}

type Query {
    listArticle(request: listArticleRequest): listArticleResponse!
}

input createArticleRequest {
    title: String!
    content: String!
    image: String!
}

type createArticleResponse {
    code: Int!
    msg: String!
}

type Mutation {
    createArticle(request: createArticleRequest): createArticleResponse!
}